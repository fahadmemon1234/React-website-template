import _classCallCheck from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/classCallCheck";
import _createClass from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createClass";
import {
    AnimatableColor
} from "./AnimatableColor";
import {
    setRangeValue
} from "../../Utils/NumberUtils";
export var AnimatableGradient = /*#__PURE__*/ function() {
    function AnimatableGradient() {
        _classCallCheck(this, AnimatableGradient);

        this.angle = new GradientAngle();
        this.colors = [];
        this.type = "random";
    }

    _createClass(AnimatableGradient, [{
        key: "load",
        value: function load(data) {
            if (!data) {
                return;
            }

            this.angle.load(data.angle);

            if (data.colors !== undefined) {
                this.colors = data.colors.map(function(s) {
                    var tmp = new AnimatableGradientColor();
                    tmp.load(s);
                    return tmp;
                });
            }

            if (data.type !== undefined) {
                this.type = data.type;
            }
        }
    }]);

    return AnimatableGradient;
}();
export var GradientAngle = /*#__PURE__*/ function() {
    function GradientAngle() {
        _classCallCheck(this, GradientAngle);

        this.value = 0;
        this.animation = new GradientAngleAnimation();
        this.direction = "clockwise";
    }

    _createClass(GradientAngle, [{
        key: "load",
        value: function load(data) {
            if (!data) {
                return;
            }

            this.animation.load(data.animation);

            if (data.value !== undefined) {
                this.value = data.value;
            }

            if (data.direction !== undefined) {
                this.direction = data.direction;
            }
        }
    }]);

    return GradientAngle;
}();
export var GradientColorOpacity = /*#__PURE__*/ function() {
    function GradientColorOpacity() {
        _classCallCheck(this, GradientColorOpacity);

        this.value = 0;
        this.animation = new GradientColorOpacityAnimation();
    }

    _createClass(GradientColorOpacity, [{
        key: "load",
        value: function load(data) {
            if (!data) {
                return;
            }

            this.animation.load(data.animation);

            if (data.value !== undefined) {
                this.value = setRangeValue(data.value);
            }
        }
    }]);

    return GradientColorOpacity;
}();
export var AnimatableGradientColor = /*#__PURE__*/ function() {
    function AnimatableGradientColor() {
        _classCallCheck(this, AnimatableGradientColor);

        this.stop = 0;
        this.value = new AnimatableColor();
    }

    _createClass(AnimatableGradientColor, [{
        key: "load",
        value: function load(data) {
            if (!data) {
                return;
            }

            if (data.stop !== undefined) {
                this.stop = data.stop;
            }

            this.value = AnimatableColor.create(this.value, data.value);

            if (data.opacity !== undefined) {
                this.opacity = new GradientColorOpacity();

                if (typeof data.opacity === "number") {
                    this.opacity.value = data.opacity;
                } else {
                    this.opacity.load(data.opacity);
                }
            }
        }
    }]);

    return AnimatableGradientColor;
}();
export var GradientAngleAnimation = /*#__PURE__*/ function() {
    function GradientAngleAnimation() {
        _classCallCheck(this, GradientAngleAnimation);

        this.count = 0;
        this.enable = false;
        this.speed = 0;
        this.sync = false;
    }

    _createClass(GradientAngleAnimation, [{
        key: "load",
        value: function load(data) {
            if (!data) {
                return;
            }

            if (data.count !== undefined) {
                this.count = setRangeValue(data.count);
            }

            if (data.enable !== undefined) {
                this.enable = data.enable;
            }

            if (data.speed !== undefined) {
                this.speed = setRangeValue(data.speed);
            }

            if (data.sync !== undefined) {
                this.sync = data.sync;
            }
        }
    }]);

    return GradientAngleAnimation;
}();
export var GradientColorOpacityAnimation = /*#__PURE__*/ function() {
    function GradientColorOpacityAnimation() {
        _classCallCheck(this, GradientColorOpacityAnimation);

        this.count = 0;
        this.enable = false;
        this.speed = 0;
        this.sync = false;
        this.startValue = "random";
    }

    _createClass(GradientColorOpacityAnimation, [{
        key: "load",
        value: function load(data) {
            if (!data) {
                return;
            }

            if (data.count !== undefined) {
                this.count = setRangeValue(data.count);
            }

            if (data.enable !== undefined) {
                this.enable = data.enable;
            }

            if (data.speed !== undefined) {
                this.speed = setRangeValue(data.speed);
            }

            if (data.sync !== undefined) {
                this.sync = data.sync;
            }

            if (data.startValue !== undefined) {
                this.startValue = data.startValue;
            }
        }
    }]);

    return GradientColorOpacityAnimation;
}();