import _classCallCheck from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/classCallCheck";
import _createClass from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createClass";
import _get from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/get";
import _getPrototypeOf from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/getPrototypeOf";
import _inherits from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/inherits";
import _createSuper from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createSuper";
import {
    BubbleBase
} from "./BubbleBase";
export var BubbleDiv = /*#__PURE__*/ function(_BubbleBase) {
    _inherits(BubbleDiv, _BubbleBase);

    var _super = _createSuper(BubbleDiv);

    function BubbleDiv() {
        var _this;

        _classCallCheck(this, BubbleDiv);

        _this = _super.call(this);
        _this.selectors = [];
        return _this;
    }

    _createClass(BubbleDiv, [{
        key: "ids",
        get: function get() {
            return this.selectors instanceof Array ? this.selectors.map(function(t) {
                return t.replace("#", "");
            }) : this.selectors.replace("#", "");
        },
        set: function set(value) {
            this.selectors = value instanceof Array ? value.map(function(t) {
                return "#".concat(t);
            }) : "#".concat(value);
        }
    }, {
        key: "load",
        value: function load(data) {
            _get(_getPrototypeOf(BubbleDiv.prototype), "load", this).call(this, data);

            if (data === undefined) {
                return;
            }

            if (data.ids !== undefined) {
                this.ids = data.ids;
            }

            if (data.selectors !== undefined) {
                this.selectors = data.selectors;
            }
        }
    }]);

    return BubbleDiv;
}(BubbleBase);