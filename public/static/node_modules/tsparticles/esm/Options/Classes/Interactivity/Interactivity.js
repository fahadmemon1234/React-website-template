import _classCallCheck from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/classCallCheck";
import _createClass from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createClass";
import {
    Events
} from "./Events/Events";
import {
    Modes
} from "./Modes/Modes";
export var Interactivity = /*#__PURE__*/ function() {
    function Interactivity() {
        _classCallCheck(this, Interactivity);

        this.detectsOn = "window";
        this.events = new Events();
        this.modes = new Modes();
    }

    _createClass(Interactivity, [{
        key: "detect_on",
        get: function get() {
            return this.detectsOn;
        },
        set: function set(value) {
            this.detectsOn = value;
        }
    }, {
        key: "load",
        value: function load(data) {
            var _a, _b, _c;

            if (data === undefined) {
                return;
            }

            var detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;

            if (detectsOn !== undefined) {
                this.detectsOn = detectsOn;
            }

            this.events.load(data.events);
            this.modes.load(data.modes);

            if (((_c = (_b = data.modes) === null || _b === void 0 ? void 0 : _b.slow) === null || _c === void 0 ? void 0 : _c.active) === true) {
                if (this.events.onHover.mode instanceof Array) {
                    if (this.events.onHover.mode.indexOf("slow") < 0) {
                        this.events.onHover.mode.push("slow");
                    }
                } else if (this.events.onHover.mode !== "slow") {
                    this.events.onHover.mode = [this.events.onHover.mode, "slow"];
                }
            }
        }
    }]);

    return Interactivity;
}();