import _classCallCheck from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/classCallCheck";
import _createClass from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createClass";
import _get from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/get";
import _getPrototypeOf from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/getPrototypeOf";
import _inherits from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/inherits";
import _createSuper from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createSuper";
import {
    AnimationOptions
} from "../../AnimationOptions";
export var OpacityAnimation = /*#__PURE__*/ function(_AnimationOptions) {
    _inherits(OpacityAnimation, _AnimationOptions);

    var _super = _createSuper(OpacityAnimation);

    function OpacityAnimation() {
        var _this;

        _classCallCheck(this, OpacityAnimation);

        _this = _super.call(this);
        _this.destroy = "none";
        _this.enable = false;
        _this.speed = 2;
        _this.startValue = "random";
        _this.sync = false;
        return _this;
    }

    _createClass(OpacityAnimation, [{
        key: "opacity_min",
        get: function get() {
            return this.minimumValue;
        },
        set: function set(value) {
            this.minimumValue = value;
        }
    }, {
        key: "load",
        value: function load(data) {
            var _a;

            if (data === undefined) {
                return;
            }

            _get(_getPrototypeOf(OpacityAnimation.prototype), "load", this).call(this, data);

            if (data.destroy !== undefined) {
                this.destroy = data.destroy;
            }

            if (data.enable !== undefined) {
                this.enable = data.enable;
            }

            this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;

            if (data.speed !== undefined) {
                this.speed = data.speed;
            }

            if (data.startValue !== undefined) {
                this.startValue = data.startValue;
            }

            if (data.sync !== undefined) {
                this.sync = data.sync;
            }
        }
    }]);

    return OpacityAnimation;
}(AnimationOptions);