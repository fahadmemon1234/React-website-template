import _classCallCheck from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/classCallCheck";
import _createClass from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createClass";
import _get from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/get";
import _getPrototypeOf from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/getPrototypeOf";
import _inherits from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/inherits";
import _createSuper from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createSuper";
import {
    HslAnimation
} from "./HslAnimation";
import {
    OptionsColor
} from "./OptionsColor";
export var AnimatableColor = /*#__PURE__*/ function(_OptionsColor) {
    _inherits(AnimatableColor, _OptionsColor);

    var _super = _createSuper(AnimatableColor);

    function AnimatableColor() {
        var _this;

        _classCallCheck(this, AnimatableColor);

        _this = _super.call(this);
        _this.animation = new HslAnimation();
        return _this;
    }

    _createClass(AnimatableColor, [{
        key: "load",
        value: function load(data) {
            _get(_getPrototypeOf(AnimatableColor.prototype), "load", this).call(this, data);

            if (!data) {
                return;
            }

            var colorAnimation = data.animation;

            if (colorAnimation !== undefined) {
                if (colorAnimation.enable !== undefined) {
                    this.animation.h.load(colorAnimation);
                } else {
                    this.animation.load(data.animation);
                }
            }
        }
    }], [{
        key: "create",
        value: function create(source, data) {
            var color = new AnimatableColor();
            color.load(source);

            if (data !== undefined) {
                if (typeof data === "string" || data instanceof Array) {
                    color.load({
                        value: data
                    });
                } else {
                    color.load(data);
                }
            }

            return color;
        }
    }]);

    return AnimatableColor;
}(OptionsColor);