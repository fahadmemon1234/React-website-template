import _classCallCheck from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/classCallCheck";
import _createClass from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createClass";
import {
    AbsorberSize
} from "./AbsorberSize";
import {
    OptionsColor
} from "../../../../Options/Classes/OptionsColor";
import {
    setRangeValue
} from "../../../../Utils/NumberUtils";
export var Absorber = /*#__PURE__*/ function() {
    function Absorber() {
        _classCallCheck(this, Absorber);

        this.color = new OptionsColor();
        this.color.value = "#000000";
        this.draggable = false;
        this.opacity = 1;
        this.destroy = true;
        this.orbits = false;
        this.size = new AbsorberSize();
    }

    _createClass(Absorber, [{
        key: "load",
        value: function load(data) {
            if (data === undefined) {
                return;
            }

            if (data.color !== undefined) {
                this.color = OptionsColor.create(this.color, data.color);
            }

            if (data.draggable !== undefined) {
                this.draggable = data.draggable;
            }

            this.name = data.name;

            if (data.opacity !== undefined) {
                this.opacity = data.opacity;
            }

            if (data.position !== undefined) {
                this.position = {};

                if (data.position.x !== undefined) {
                    this.position.x = setRangeValue(data.position.x);
                }

                if (data.position.y !== undefined) {
                    this.position.y = setRangeValue(data.position.y);
                }
            }

            if (data.size !== undefined) {
                this.size.load(data.size);
            }

            if (data.destroy !== undefined) {
                this.destroy = data.destroy;
            }

            if (data.orbits !== undefined) {
                this.orbits = data.orbits;
            }
        }
    }]);

    return Absorber;
}();