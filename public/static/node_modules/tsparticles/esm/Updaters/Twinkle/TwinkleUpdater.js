import _classCallCheck from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/classCallCheck";
import _createClass from "F:\\02-React\\05-Approve\\01-trydo\\trydo\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/createClass";
import {
    colorToHsl,
    getStyleFromHsl
} from "../../Utils/ColorUtils";
import {
    getRangeValue
} from "../../Utils/NumberUtils";
export var TwinkleUpdater = /*#__PURE__*/ function() {
    function TwinkleUpdater() {
        _classCallCheck(this, TwinkleUpdater);
    }

    _createClass(TwinkleUpdater, [{
        key: "getColorStyles",
        value: function getColorStyles(particle, context, radius, opacity) {
            var pOptions = particle.options,
                twinkle = pOptions.twinkle.particles,
                twinkling = twinkle.enable && Math.random() < twinkle.frequency,
                zIndexOptions = particle.options.zIndex,
                zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),
                twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity,
                twinkleRgb = colorToHsl(twinkle.color),
                twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined,
                res = {},
                needsTwinkle = twinkling && twinkleStyle;
            res.fill = needsTwinkle ? twinkleStyle : undefined;
            res.stroke = needsTwinkle ? twinkleStyle : undefined;
            return res;
        }
    }, {
        key: "init",
        value: function init() {}
    }, {
        key: "isEnabled",
        value: function isEnabled(particle) {
            return particle.options.twinkle.particles.enable;
        }
    }, {
        key: "update",
        value: function update() {}
    }]);

    return TwinkleUpdater;
}();